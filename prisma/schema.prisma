datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id               String         @id @default(cuid())
  name             String?
  email            String?        @unique
  emailVerified    DateTime?
  image            String?
  password         String?
  stripeCustomerId String?        @unique
  isActive         Boolean        @default(false)
  accounts         Account[]
  subscriptions    Subscription[] // Add a relation to Subscription
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String
  stripeSubscriptionId String   @unique
  toolUrl              String
  planType             String
  endDate              DateTime
  isActive             Boolean  @default(true)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  tool                 Tool?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tool {
  id               String      @id @default(cuid())
  subscriptionId   String      @unique
  name             String
  shortDescription String
  description      String
  website          String
  logoUrl          String
  screenshots      String[]
  price            Float?
  pricingType      PricingType
  categoryId       String
  tierId           String
  keyFeatures      String[]
  useCases         String[]
  deals            Deal[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category     ToolCategory @relation(fields: [categoryId], references: [id])
  tier         TierCategory @relation(fields: [tierId], references: [id])
  subscription Subscription @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
}

model Deal {
  id            String @id @default(cuid())
  toolId        String
  title         String
  price         String
  originalPrice String
  validity      String
  savings       String
  link          String
  tool          Tool   @relation(fields: [toolId], references: [id], onDelete: Cascade)
}

enum PricingType {
  FREE
  AMOUNT
  REQUEST_PRICE
}

model ToolCategory {
  id    String @id @default(cuid())
  name  String
  tools Tool[]

  @@unique([name])
}

model TierCategory {
  id    String @id @default(cuid())
  name  String
  tools Tool[]

  @@unique([name])
}
